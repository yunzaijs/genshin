name: Tag Deploy Version

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create (e.g., 0.0.1)'
        required: true
      branch:
        description: 'Deploy branch to create (e.g., deploy-123)'
        required: true

permissions:
  contents: write

jobs:
  tag-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set remote URL
        run: |
          git remote set-url origin https://yunzaijs:${{ secrets.GH_TOKEN }}@github.com/yunzaijs/genshin.git

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install yarn@1.19.1 -g
          yarn install --ignore-engines

      - name: Build project
        run: |
          yarn build
          sh build.sh

      - name: Push to deploy branch
        run: |
          BRANCH_NAME=${{ github.event.inputs.branch }}
          echo "Deploying to branch: $BRANCH_NAME"

          cd dist/
          git init
          git checkout -b $BRANCH_NAME
          git config --local user.email "ningmengchongshui@gmail.com"
          git config --local user.name "ningmengchongshui"
          git add -A
          git commit -m "workflows - $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          git push origin HEAD:$BRANCH_NAME -f

      - name: Create and push tag
        run: |
          git tag v${{ github.event.inputs.tag }}
          git push origin v${{ github.event.inputs.tag }}

      - name: Delete deploy branch
        run: |
          BRANCH_NAME=${{ github.event.inputs.branch }}
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
          git fetch --all
          git checkout $DEFAULT_BRANCH
          if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
            git branch -d $BRANCH_NAME
            git push origin --delete $BRANCH_NAME
          else
            echo "Branch $BRANCH_NAME does not exist, skipping deletion."
          fi
